{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { logoutUser, setCurrentUser, getCurrentUser, clearCurrentUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Navbar from \"./layouts/Navbar\";\nimport RestaurantProtected from \"./components/common/RestaurantProtected\";\nimport DriverProtected from \"./components/common/DriverProtected\";\nimport CustomerProtected from \"./components/common/CustomerProtected\";\nimport RestaurantDashboard from \"./components/restaurant/dashboard\";\nimport CustomerDashboard from \"./components/customer/dashboard\";\nimport DriverDashboard from \"./components/driver/dashboard\";\nimport NotFound from \"./components/not-found\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport landing from \"./components/landing\"; // Check for token\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken); // Decode token and get user info and expiration\n\n  const decoded = jwt_decode(localStorage.jwtToken); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded));\n  store.dispatch(getCurrentUser()); // Check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // TODO: Clear current Profile\n\n    store.dispatch(clearCurrentUser()); // Redirect to login\n\n    window.location.href = \"/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: landing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/not-found\",\n            component: NotFound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(CustomerProtected, {\n              exact: true,\n              path: \"/customer\",\n              component: CustomerDashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RestaurantProtected, {\n              exact: true,\n              path: \"/restaurant\",\n              component: RestaurantDashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DriverProtected, {\n              exact: true,\n              path: \"/driver\",\n              component: DriverDashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","logoutUser","setCurrentUser","getCurrentUser","clearCurrentUser","Provider","store","Login","Register","Navbar","RestaurantProtected","DriverProtected","CustomerProtected","RestaurantDashboard","CustomerDashboard","DriverDashboard","NotFound","landing","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport {\n  logoutUser,\n  setCurrentUser,\n  getCurrentUser,\n  clearCurrentUser\n} from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Navbar from \"./layouts/Navbar\";\nimport RestaurantProtected from \"./components/common/RestaurantProtected\";\nimport DriverProtected from \"./components/common/DriverProtected\";\nimport CustomerProtected from \"./components/common/CustomerProtected\";\n\nimport RestaurantDashboard from \"./components/restaurant/dashboard\";\nimport CustomerDashboard from \"./components/customer/dashboard\";\nimport DriverDashboard from \"./components/driver/dashboard\";\nimport NotFound from \"./components/not-found\";\n\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport landing from \"./components/landing\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and expiration\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  store.dispatch(getCurrentUser());\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // TODO: Clear current Profile\n    store.dispatch(clearCurrentUser());\n    // Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/not-found\" component={NotFound} />\n            <Switch>\n              <CustomerProtected exact path=\"/customer\" component={CustomerDashboard}/>\n              <RestaurantProtected exact path=\"/restaurant\" component={RestaurantDashboard}/>\n              <DriverProtected exact path=\"/driver\" component={DriverDashboard}/>\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}