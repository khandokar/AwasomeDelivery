{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\customer\\\\menus\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getFilteredMenus, createOrder, populateMenusFromRestaurant } from \"../../../actions/customerActions\";\nimport { List, Avatar, PageHeader, Divider, Input, Typography, InputNumber, Button, Row, Col } from \"antd\";\nimport Spinner from \"../../common/spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst {\n  Text\n} = Typography;\n\nconst AllMenus = props => {\n  _s();\n\n  const [goBack, setGoBack] = useState(false);\n  const {\n    name,\n    menus,\n    id\n  } = props.selectedRestaurant;\n  const filteredMenus = props.customer.menus;\n  let {\n    loading\n  } = props.customer;\n  const {\n    populateMenusFromRestaurant\n  } = props;\n  let menuContent;\n  var allMenus = [];\n\n  if (filteredMenus) {\n    allMenus = filteredMenus;\n  }\n\n  const {\n    auth,\n    createOrder,\n    getFilteredMenus\n  } = props;\n  const {\n    loggedInUser\n  } = auth;\n\n  const onChange = (value, item) => {\n    let index = allMenus.findIndex(menu => menu.id === item.id);\n    allMenus[index].quantity = value;\n  };\n\n  const searchMenu = async menuName => {\n    if (menuName !== null || menuName !== \"\") {\n      loading = true;\n      await getFilteredMenus(name, menuName);\n      loading = false;\n      setGoBack(true);\n    }\n  };\n\n  const BackToList = async () => {\n    populateMenusFromRestaurant(menus);\n    setGoBack(false);\n  };\n\n  const submitOrder = () => {\n    var finalOrder = {\n      customerId: loggedInUser.userId,\n      restaurantId: id,\n      menus: []\n    };\n    finalOrder[\"menus\"] = allMenus.filter(menu => menu.quantity > 0);\n    createOrder(loggedInUser.userId, finalOrder);\n  };\n\n  if (allMenus === null || loading) {\n    menuContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this);\n  } else {\n    if (allMenus && allMenus.length > 0) {\n      menuContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            placeholder: \"input search text\",\n            style: {\n              width: \"100%\",\n              marginBottom: 10\n            },\n            onSearch: searchMenu,\n            enterButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            itemLayout: \"vertical\",\n            size: \"large\",\n            pagination: {\n              onChange: page => {// console.log(page);\n              },\n              pageSize: 3\n            },\n            dataSource: allMenus,\n            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: item.imageUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 29\n                }, this),\n                title: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#/\" // onClick={() => {\n                  //   props.pupulateRestaurant(item);\n                  //   props.setSelectedMenuItem(\"Menu\");\n                  // }}\n                  ,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this),\n                description: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  float: \"right\",\n                  marginBottom: \"10px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                  min: 0,\n                  max: 10,\n                  defaultValue: 0,\n                  onChange: value => {\n                    onChange(value, item);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            plain: true,\n            orientation: \"left\",\n            children: \"Ready to order, please press the order button?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              float: \"right\",\n              width: \"10%\"\n            },\n            onClick: submitOrder,\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    } else {\n      menuContent = /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No menus found ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(PageHeader, {\n          className: \"site-page-header\",\n          onBack: () => props.goBack(\"Restaurants\"),\n          title: \"Back to restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), goBack && /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        offset: 8,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: \"right\"\n          } // icon={<PlusOutlined />}\n          ,\n          onClick: BackToList,\n          children: \"Go back to list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        plain: true,\n        orientation: \"left\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), menuContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllMenus, \"W+9t1+ukPEhigFu5RugMCCfdHvQ=\");\n\n_c = AllMenus;\nAllMenus.propTypes = {\n  getFilteredMenus: PropTypes.func.isRequired,\n  populateMenusFromRestaurant: PropTypes.func.isRequired,\n  createOrder: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  customer: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  customer: state.customer,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createOrder,\n  getFilteredMenus,\n  populateMenusFromRestaurant\n})(withRouter(AllMenus));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMenus\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/customer/menus/index.js"],"names":["React","useState","PropTypes","withRouter","connect","getFilteredMenus","createOrder","populateMenusFromRestaurant","List","Avatar","PageHeader","Divider","Input","Typography","InputNumber","Button","Row","Col","Spinner","Search","Text","AllMenus","props","goBack","setGoBack","name","menus","id","selectedRestaurant","filteredMenus","customer","loading","menuContent","allMenus","auth","loggedInUser","onChange","value","item","index","findIndex","menu","quantity","searchMenu","menuName","BackToList","submitOrder","finalOrder","customerId","userId","restaurantId","filter","length","width","marginBottom","page","pageSize","imageUrl","description","price","float","marginTop","propTypes","func","isRequired","object","errors","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilteredMenus,\r\n  createOrder,\r\n  populateMenusFromRestaurant\r\n} from \"../../../actions/customerActions\";\r\nimport {\r\n  List,\r\n  Avatar,\r\n  PageHeader,\r\n  Divider,\r\n  Input,\r\n  Typography,\r\n  InputNumber,\r\n  Button,\r\n  Row, Col\r\n} from \"antd\";\r\nimport Spinner from \"../../common/spinner\";\r\n\r\nconst { Search } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst AllMenus = (props) => {\r\n  const [goBack, setGoBack] = useState(false);\r\n  const { name, menus, id } = props.selectedRestaurant;\r\n  const filteredMenus = props.customer.menus;\r\n  let { loading } = props.customer;\r\n  const { populateMenusFromRestaurant } = props;\r\n\r\n  let menuContent;\r\n  var allMenus = [];\r\n\r\n  if(filteredMenus){\r\n    allMenus = filteredMenus;\r\n  }\r\n  const { auth, createOrder, getFilteredMenus } = props;\r\n  const { loggedInUser } = auth;\r\n\r\n  const onChange = (value, item) => {\r\n    let index = allMenus.findIndex((menu) => menu.id === item.id);\r\n    allMenus[index].quantity = value;\r\n  };\r\n\r\n  const searchMenu = async(menuName) => {\r\n    if (menuName !== null || menuName !== \"\") {\r\n      loading = true;\r\n      await getFilteredMenus(name, menuName);\r\n      loading = false;\r\n      setGoBack(true);\r\n    }\r\n  };\r\n\r\n  const BackToList = async () => {\r\n    populateMenusFromRestaurant(menus);\r\n    setGoBack(false);\r\n  };\r\n\r\n  const submitOrder = () => {\r\n    var finalOrder = {\r\n      customerId: loggedInUser.userId,\r\n      restaurantId: id,\r\n      menus: [],\r\n    };\r\n    finalOrder[\"menus\"] = allMenus.filter((menu) => menu.quantity > 0);\r\n    createOrder( loggedInUser.userId, finalOrder);\r\n  };\r\n\r\n  if (allMenus === null || loading) {\r\n    menuContent = <Spinner />;\r\n  } else {\r\n    if (allMenus && allMenus.length > 0) {\r\n      menuContent = (\r\n        <div>\r\n          <div>\r\n            <Search\r\n              placeholder=\"input search text\"\r\n              style={{ width: \"100%\", marginBottom: 10 }}\r\n              onSearch={searchMenu}\r\n              enterButton\r\n            />\r\n            <List\r\n              itemLayout=\"vertical\"\r\n              size=\"large\"\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  // console.log(page);\r\n                },\r\n                pageSize: 3,\r\n              }}\r\n              dataSource={allMenus}\r\n              renderItem={(item) => (\r\n                <List.Item key={item.name}>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.imageUrl} />}\r\n                    title={\r\n                      <a\r\n                        href=\"#/\"\r\n                        // onClick={() => {\r\n                        //   props.pupulateRestaurant(item);\r\n                        //   props.setSelectedMenuItem(\"Menu\");\r\n                        // }}\r\n                      >\r\n                        {item.name}\r\n                      </a>\r\n                    }\r\n                    description={item.description}\r\n                  />\r\n                  <Text type=\"secondary\">${item.price}</Text>\r\n                  <div style={{ float: \"right\", marginBottom: \"10px\" }}>\r\n                    <InputNumber\r\n                      min={0}\r\n                      max={10}\r\n                      defaultValue={0}\r\n                      onChange={(value) => {\r\n                        onChange(value, item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 30 }}>\r\n            <Divider plain orientation=\"left\">\r\n              Ready to order, please press the order button?\r\n            </Divider>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ float: \"right\", width: \"10%\" }}\r\n              onClick={submitOrder}\r\n            >\r\n              Order\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      menuContent = <h4>No menus found ...</h4>;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n            <Row>\r\n        <Col span={8}>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        onBack={() => props.goBack(\"Restaurants\")}\r\n        title=\"Back to restaurants\"\r\n      /></Col>\r\n      {goBack && (\r\n          <Col span={8} offset={8}>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ float: \"right\" }}\r\n              // icon={<PlusOutlined />}\r\n              onClick={BackToList}\r\n            >\r\n              Go back to list\r\n            </Button>\r\n          </Col>\r\n        )}</Row>\r\n      <div>\r\n        <Divider plain orientation=\"left\">\r\n          {name}\r\n        </Divider>\r\n        {menuContent}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAllMenus.propTypes = {\r\n  getFilteredMenus: PropTypes.func.isRequired,\r\n  populateMenusFromRestaurant: PropTypes.func.isRequired,\r\n  createOrder: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  customer: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  customer: state.customer,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createOrder,\r\n  getFilteredMenus,\r\n  populateMenusFromRestaurant\r\n})(withRouter(AllMenus));\r\n"]},"metadata":{},"sourceType":"module"}