{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { Form, Input, Button, Card, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst tailLayout = {\n  wrapperCol: {\n    // offset: 5,\n    span: 5\n  }\n};\n\nconst Login = props => {\n  if (props.auth.isAuthenticated) {\n    let userType;\n\n    if (props.auth.loggedInUser && props.auth.loggedInUser.authorities) {\n      userType = props.auth.loggedInUser && props.auth.loggedInUser.authorities[0].authority;\n    }\n\n    if (userType === \"ROLE_RESTAURANT\") {\n      props.history.push(\"/restaurant\");\n    }\n\n    if (userType === \"ROLE_CUSTOMER\") {\n      props.history.push(\"/customer\");\n    }\n\n    if (userType === \"ROLE_DRIVER\") {\n      props.history.push(\"/driver\");\n    }\n  }\n\n  const onSubmit = values => {\n    const userInfo = {\n      username: values[\"username\"],\n      password: values[\"password\"]\n    };\n    props.loginUser(userInfo);\n  }; // const onFinishFailed = (errorInfo) => {\n  //   console.log(\"Failed:\", errorInfo);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-inner\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: /*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this),\n        bordered: true,\n        style: {\n          width: 500,\n          marginBottom: -3,\n          borderRadius: \"8px\",\n          // boxShadow: \"5px 8px 24px 5px rgba(208, 216, 243, 0.6)\",\n          boxShadow: \"5px 8px 24px 5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            margin: 20,\n            width: 350\n          },\n          name: \"basic\",\n          initialValues: {\n            remember: false\n          },\n          onFinish: onSubmit // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            // label=\"Username\"\n            style: {\n              marginBottom: 20\n            },\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your username!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this),\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            // label=\"Password\"\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this),\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withRouter(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/auth/Login.js"],"names":["React","PropTypes","withRouter","connect","Form","Input","Button","Card","Typography","UserOutlined","LockOutlined","loginUser","Title","tailLayout","wrapperCol","span","Login","props","auth","isAuthenticated","userType","loggedInUser","authorities","authority","history","push","onSubmit","values","userInfo","username","password","width","marginBottom","borderRadius","boxShadow","margin","remember","required","message","propTypes","func","isRequired","object","errors","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, Button, Card, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst { Title } = Typography;\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    // offset: 5,\r\n    span: 5,\r\n  },\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n  if(props.auth.isAuthenticated){\r\n    let userType;\r\n    if (\r\n      props.auth.loggedInUser &&\r\n      props.auth.loggedInUser.authorities\r\n    ) {\r\n      userType =\r\n        props.auth.loggedInUser && props.auth.loggedInUser.authorities[0].authority;\r\n    }\r\n\r\n    if (userType === \"ROLE_RESTAURANT\") {\r\n      props.history.push(\"/restaurant\");\r\n    }\r\n    if (userType === \"ROLE_CUSTOMER\") {\r\n      props.history.push(\"/customer\");\r\n    }\r\n    if (userType === \"ROLE_DRIVER\") {\r\n      props.history.push(\"/driver\");\r\n    }\r\n  }\r\n  \r\n\r\n  const onSubmit = (values) => {\r\n    const userInfo = {\r\n      username: values[\"username\"],\r\n      password: values[\"password\"],\r\n    };\r\n    props.loginUser(userInfo);\r\n  };\r\n\r\n  // const onFinishFailed = (errorInfo) => {\r\n  //   console.log(\"Failed:\", errorInfo);\r\n  // };\r\n\r\n  return (\r\n    <div align=\"center\" className=\"login\">\r\n      <div className=\"login-inner\">\r\n        <Card\r\n          title={<Title level={3}>Login</Title>}\r\n          bordered={true}\r\n          style={{\r\n            width: 500,\r\n            marginBottom: -3,\r\n            borderRadius: \"8px\",\r\n            // boxShadow: \"5px 8px 24px 5px rgba(208, 216, 243, 0.6)\",\r\n            boxShadow: \"5px 8px 24px 5px\",\r\n          }}\r\n        >\r\n          <Form\r\n            style={{ margin: 20, width: 350 }}\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n            onFinish={onSubmit}\r\n            // onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              // label=\"Username\"\r\n              style={{ marginBottom: 20 }}\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your username!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              // label=\"Password\"\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(withRouter(Login));\r\n"]},"metadata":{},"sourceType":"module"}