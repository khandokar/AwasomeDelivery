{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\customer\\\\orders\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getOrders } from \"../../../actions/customerActions\";\nimport { Table, Input, Result, Row, Col } from \"antd\";\nimport Spinner from \"../../common/spinner\";\nimport DetailData from \"./DetailData\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { FrownOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst AllOrders = props => {\n  _s();\n\n  const {\n    auth,\n    getOrders\n  } = props;\n  const {\n    loggedInUser\n  } = auth;\n  const loading = props.loading;\n  const orders = props.orders;\n  const [orderData, setOrderData] = useState(orders);\n  const userId = loggedInUser.userId; // const loading = false;\n\n  let orderContent;\n  useEffect(() => {\n    getOrders(userId);\n  }, [getOrders, userId]);\n  useEffect(() => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      return {\n        key: i + 1,\n        orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\n        menus: row.menus,\n        totalPrice: row.totalPrice,\n        status: row.status\n      };\n    }));\n  }, [orders]);\n\n  const populateOrder = () => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      return {\n        key: i + 1,\n        orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\n        menus: row.menus,\n        totalPrice: row.totalPrice,\n        status: row.status\n      };\n    }));\n  };\n\n  const filterOrder = key => {\n    if (key === \"\") {\n      populateOrder();\n    } else {\n      const filteredOrders = _.filter(orderData, menu => // menu.menus.name.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\n      menu.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 || menu.totalPrice.toString().indexOf(key.toLowerCase()) > -1 || menu.status.toLowerCase().indexOf(key.toLowerCase()) > -1);\n\n      setOrderData(filteredOrders);\n    }\n  };\n\n  const columns = [{\n    title: \"Order Id\",\n    dataIndex: \"key\",\n    key: \"key\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: \"Ordered At\",\n    dataIndex: \"orderedAt\",\n    key: \"orderedAt\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.orderedAt - b.orderedAt\n  }, {\n    title: \"Total Price ($)\",\n    dataIndex: \"totalPrice\",\n    key: \"totalPrice\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.totalPrice - b.totalPrice\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.status - b.status\n  }];\n\n  const updateAllOrders = evt => {\n    filterOrder(evt.target.value);\n  };\n\n  if (orderData === null || loading) {\n    orderContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }, this);\n  } else {\n    if (orderData && orderData.length > 0) {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            marginTop: \"20px\"\n          },\n          columns: columns,\n          expandable: {\n            expandedRowRender: record => /*#__PURE__*/_jsxDEV(DetailData, {\n              data: record.menus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 46\n            }, this),\n            rowExpandable: record => record.name !== \"Not Expandable\"\n          },\n          dataSource: orderData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    } else {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            offset: 8,\n            children: /*#__PURE__*/_jsxDEV(Result, {\n              icon: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this),\n              title: \"Sorry, no orders found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search your orders\",\n      onChange: updateAllOrders,\n      style: {\n        width: 520,\n        marginBottom: 10\n      },\n      enterButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), orderContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllOrders, \"eQKlKwMUNmpU4dk6fbfW8HCmsiQ=\");\n\n_c = AllOrders;\nAllOrders.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  customer: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  customer: state.customer,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(withRouter(AllOrders));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllOrders\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/customer/orders/index.js"],"names":["React","useState","useEffect","PropTypes","withRouter","connect","getOrders","Table","Input","Result","Row","Col","Spinner","DetailData","moment","_","FrownOutlined","Search","AllOrders","props","auth","loggedInUser","loading","orders","orderData","setOrderData","userId","orderContent","map","row","i","key","orderedAt","orderDate","format","menus","totalPrice","status","populateOrder","filterOrder","filteredOrders","filter","menu","toLowerCase","indexOf","toString","columns","title","dataIndex","defaultSortOrder","sorter","a","b","updateAllOrders","evt","target","value","length","marginTop","expandedRowRender","record","rowExpandable","name","width","marginBottom","propTypes","func","isRequired","object","customer","errors","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOrders } from \"../../../actions/customerActions\";\r\nimport { Table, Input, Result, Row, Col } from \"antd\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport DetailData from \"./DetailData\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport { FrownOutlined } from \"@ant-design/icons\";\r\nconst { Search } = Input;\r\n\r\nconst AllOrders = (props) => {\r\n  const { auth, getOrders } = props;\r\n  const { loggedInUser } = auth;\r\n  const loading = props.loading;\r\n  const orders = props.orders;\r\n  const [orderData, setOrderData] = useState(orders);\r\n  const userId = loggedInUser.userId;\r\n  // const loading = false;\r\n  let orderContent;\r\n\r\n  useEffect(() => {\r\n    getOrders(userId);\r\n  }, [getOrders, userId]);\r\n\r\n  useEffect(() => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        return {\r\n          key: i + 1,\r\n          orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\r\n          menus: row.menus,\r\n          totalPrice: row.totalPrice,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  }, [orders]);\r\n\r\n  const populateOrder = () => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        return {\r\n          key: i + 1,\r\n          orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\r\n          menus: row.menus,\r\n          totalPrice: row.totalPrice,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  };\r\n  const filterOrder = (key) => {\r\n    if (key === \"\") {\r\n      populateOrder();\r\n    } else {\r\n      const filteredOrders = _.filter(\r\n        orderData,\r\n        (menu) =>\r\n          // menu.menus.name.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          menu.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          menu.totalPrice.toString().indexOf(key.toLowerCase()) > -1 ||\r\n          menu.status.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n      );\r\n      setOrderData(filteredOrders);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order Id\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.key - b.key,\r\n    },\r\n    {\r\n      title: \"Ordered At\",\r\n      dataIndex: \"orderedAt\",\r\n      key: \"orderedAt\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.orderedAt - b.orderedAt,\r\n    },\r\n    {\r\n      title: \"Total Price ($)\",\r\n      dataIndex: \"totalPrice\",\r\n      key: \"totalPrice\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.totalPrice - b.totalPrice,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.status - b.status,\r\n    },\r\n  ];\r\n\r\n  const updateAllOrders = (evt) => {\r\n    filterOrder(evt.target.value);\r\n  };\r\n\r\n  if (orderData === null || (loading)) {\r\n    orderContent = <Spinner />;\r\n  } else {\r\n    if (orderData && orderData.length > 0) {\r\n      orderContent = (\r\n        <div>\r\n          <Table\r\n            style={{ marginTop: \"20px\" }}\r\n            columns={columns}\r\n            expandable={{\r\n              expandedRowRender: (record) => <DetailData data={record.menus} />,\r\n              rowExpandable: (record) => record.name !== \"Not Expandable\",\r\n            }}\r\n            dataSource={orderData}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      orderContent = (\r\n        <div>\r\n          <Row>\r\n            <Col span={8} offset={8}>\r\n              <Result\r\n                icon={<FrownOutlined />}\r\n                title=\"Sorry, no orders found!\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Search\r\n        placeholder=\"Search your orders\"\r\n        onChange={updateAllOrders}\r\n        style={{ width: 520, marginBottom: 10 }}\r\n        enterButton\r\n      />\r\n      {orderContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nAllOrders.propTypes = {\r\n  getOrders: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  customer: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  customer: state.customer,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrders })(withRouter(AllOrders));\r\n"]},"metadata":{},"sourceType":"module"}