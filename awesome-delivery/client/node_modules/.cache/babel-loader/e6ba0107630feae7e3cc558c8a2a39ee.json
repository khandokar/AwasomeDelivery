{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\driver\\\\orders\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Table, Input, Modal, Button, Spin, Result, Row, Col } from \"antd\";\nimport { getOrders, pickOrder, deliverOrder } from \"../../../actions/driverActions\";\nimport { FrownOutlined } from \"@ant-design/icons\";\nimport Spinner from \"../../common/spinner\";\nimport DetailData from \"./DetailData\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst AllOrders = props => {\n  _s();\n\n  const {\n    auth,\n    pickOrder,\n    deliverOrder\n  } = props;\n  const {\n    loggedInUser\n  } = auth;\n  const loading = props.loading;\n  const orders = props.orders;\n  const isStatusChanged = props.orderStatusLoading;\n  let orderContent;\n  const userId = loggedInUser.userId;\n  const [orderData, setOrderData] = useState(orders);\n  const [orderId, setOrderId] = useState(\"\");\n  const [orderMode, setOrderMode] = useState(\"\");\n  const [order, setOrder] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  useEffect(() => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      let newAddress = row.customer ? row.customer.address.country + \" \" + row.customer.address.state + \" \" + row.customer.address.city + \" \" + row.customer.address.street : null;\n      return {\n        key: i,\n        id: row.id,\n        orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\n        menus: row.menus && row.menus,\n        user: row.customer,\n        username: row.customer && row.customer.name,\n        phoneNumber: row.customer && row.customer.phoneNumber,\n        totalPrice: row.totalPrice,\n        address: newAddress,\n        status: row.status\n      };\n    }));\n  }, [orders]);\n\n  const populateOrder = () => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      let newAddress = row.customer ? row.customer.address.country + \" \" + row.customer.address.state + \" \" + row.customer.address.city + \" \" + row.customer.address.street : null;\n      return {\n        key: i,\n        id: row.id,\n        orderedAt: row.orderDate,\n        menus: row.menus && row.menus,\n        user: row.customer,\n        username: row.customer && row.customer.name,\n        phoneNumber: row.customer && row.customer.phoneNumber,\n        address: newAddress,\n        status: row.status\n      };\n    }));\n  };\n\n  const showModal = (id, record) => {\n    setOrderId(id);\n    setOrder(record);\n    setModalVisible(true);\n  };\n\n  const hideModal = () => {\n    setOrderId(\"\");\n    setModalVisible(false);\n  };\n\n  const filterOrder = key => {\n    if (key === \"\") {\n      populateOrder();\n    } else {\n      const filteredOrders = _.filter(orderData, order => order.username.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.address.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.phoneNumber.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.totalPrice.toString().indexOf(key.toLowerCase()) > -1 || order.status.toLowerCase().indexOf(key.toLowerCase()) > -1);\n\n      setOrderData(filteredOrders);\n    }\n  };\n\n  const columns = [{\n    title: \"Order Id\",\n    dataIndex: \"key\",\n    key: \"key\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: \"Ordered By\",\n    dataIndex: \"username\",\n    key: \"username\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.username - b.username\n  }, {\n    title: \"Ordered At\",\n    dataIndex: \"orderedAt\",\n    key: \"orderedAt\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.orderedAt - b.orderedAt\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.address - b.address,\n    width: \"15%\"\n  }, {\n    title: \"Phone Number\",\n    dataIndex: \"phoneNumber\",\n    key: \"phoneNumber\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.phoneNumber - b.phoneNumber\n  }, {\n    title: \"Total Price($)\",\n    dataIndex: \"totalPrice\",\n    key: \"totalPrice\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.totalPrice - b.totalPrice\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.status - b.status\n  }, {\n    title: \"Action\",\n    dataIndex: \"\",\n    key: \"x\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", record.status === \"READY\" && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginRight: 30\n        },\n        onClick: () => {\n          setOrderMode(\"Pick\");\n          showModal(record.id, record);\n        },\n        children: \"Pick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), record.status === \"PICKED\" && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginRight: 30\n        },\n        onClick: () => {\n          setOrderMode(\"Deliver\");\n          showModal(record.id, record);\n        },\n        children: \"Deliver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)\n  }];\n\n  const updateAllOrders = evt => {\n    filterOrder(evt.target.value);\n  };\n\n  const onPickOrder = () => {\n    console.log(\"Order id to be picked is : \", orderId);\n    pickOrder(userId, orderId, order);\n    setModalVisible(false);\n  };\n\n  const onDeliverOrder = () => {\n    console.log(\"Order id to be delivered is : \", orderId);\n    deliverOrder(userId, orderId, order);\n    setModalVisible(false);\n  };\n\n  if (orderData === null || loading) {\n    orderContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 20\n    }, this);\n  } else {\n    if (orderData && orderData.length > 0) {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            marginTop: \"20px\"\n          },\n          columns: columns,\n          expandable: {\n            expandedRowRender: record => /*#__PURE__*/_jsxDEV(DetailData, {\n              data: record.menus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 46\n            }, this),\n            rowExpandable: record => record.menus !== null\n          },\n          dataSource: orderData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Confirm\",\n          visible: modalVisible,\n          onOk: orderMode === \"Pick\" ? onPickOrder : onDeliverOrder,\n          onCancel: hideModal,\n          okText: orderMode === \"Pick\" ? \"Picked\" : \"Delivered\",\n          cancelText: \"Exit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure,\", \" \", orderMode === \"Pick\" ? `order ${orderId} is picked` : `order ${orderId} is delivered`, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), isStatusChanged && /*#__PURE__*/_jsxDEV(Spin, {\n            style: {\n              marginLeft: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    } else {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            offset: 8,\n            children: /*#__PURE__*/_jsxDEV(Result, {\n              icon: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this),\n              title: \"Sorry, no orders found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 22\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search orders\",\n      onChange: updateAllOrders,\n      style: {\n        width: 450,\n        marginBottom: 10\n      },\n      enterButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), orderContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllOrders, \"YpbrGeEuu1bKTQM0EhT+lxssXRk=\");\n\n_c = AllOrders;\nAllOrders.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  pickOrder: PropTypes.func.isRequired,\n  deliverOrder: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  driver: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  driver: state.driver,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  pickOrder,\n  deliverOrder\n})(withRouter(AllOrders));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllOrders\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/driver/orders/index.js"],"names":["React","useState","useEffect","PropTypes","withRouter","connect","Table","Input","Modal","Button","Spin","Result","Row","Col","getOrders","pickOrder","deliverOrder","FrownOutlined","Spinner","DetailData","_","moment","Search","AllOrders","props","auth","loggedInUser","loading","orders","isStatusChanged","orderStatusLoading","orderContent","userId","orderData","setOrderData","orderId","setOrderId","orderMode","setOrderMode","order","setOrder","modalVisible","setModalVisible","map","row","i","newAddress","customer","address","country","state","city","street","key","id","orderedAt","orderDate","format","menus","user","username","name","phoneNumber","totalPrice","status","populateOrder","showModal","record","hideModal","filterOrder","filteredOrders","filter","toLowerCase","indexOf","toString","columns","title","dataIndex","defaultSortOrder","sorter","a","b","width","render","text","marginRight","updateAllOrders","evt","target","value","onPickOrder","console","log","onDeliverOrder","length","marginTop","expandedRowRender","rowExpandable","marginLeft","marginBottom","propTypes","func","isRequired","object","driver","errors","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Input, Modal, Button, Spin, Result, Row, Col } from \"antd\";\r\nimport {\r\n  getOrders,\r\n  pickOrder,\r\n  deliverOrder,\r\n} from \"../../../actions/driverActions\";\r\nimport { FrownOutlined } from \"@ant-design/icons\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport DetailData from \"./DetailData\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nconst { Search } = Input;\r\n\r\nconst AllOrders = (props) => {\r\n  const { auth, pickOrder, deliverOrder } = props;\r\n  const { loggedInUser } = auth;\r\n  const loading = props.loading;\r\n  const orders = props.orders;\r\n  const isStatusChanged = props.orderStatusLoading;\r\n  let orderContent;\r\n  const userId = loggedInUser.userId;\r\n  const [orderData, setOrderData] = useState(orders);\r\n\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [orderMode, setOrderMode] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        let newAddress = row.customer\r\n          ? row.customer.address.country +\r\n            \" \" +\r\n            row.customer.address.state +\r\n            \" \" +\r\n            row.customer.address.city +\r\n            \" \" +\r\n            row.customer.address.street\r\n          : null;\r\n        return {\r\n          key: i,\r\n          id: row.id,\r\n          orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\r\n          menus: row.menus && row.menus,\r\n          user: row.customer,\r\n          username: row.customer && row.customer.name,\r\n          phoneNumber: row.customer && row.customer.phoneNumber,\r\n          totalPrice: row.totalPrice,\r\n          address: newAddress,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  }, [orders]);\r\n\r\n  const populateOrder = () => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        let newAddress = row.customer\r\n          ? row.customer.address.country +\r\n            \" \" +\r\n            row.customer.address.state +\r\n            \" \" +\r\n            row.customer.address.city +\r\n            \" \" +\r\n            row.customer.address.street\r\n          : null;\r\n        return {\r\n          key: i,\r\n          id: row.id,\r\n          orderedAt: row.orderDate,\r\n          menus: row.menus && row.menus,\r\n          user: row.customer,\r\n          username: row.customer && row.customer.name,\r\n          phoneNumber: row.customer && row.customer.phoneNumber,\r\n          address: newAddress,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const showModal = (id, record) => {\r\n    setOrderId(id);\r\n    setOrder(record);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOrderId(\"\");\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const filterOrder = (key) => {\r\n    if (key === \"\") {\r\n      populateOrder();\r\n    } else {\r\n      const filteredOrders = _.filter(\r\n        orderData,\r\n        (order) =>\r\n          order.username.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.address.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.phoneNumber.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.totalPrice.toString().indexOf(key.toLowerCase()) > -1 ||\r\n          order.status.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n      );\r\n      setOrderData(filteredOrders);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order Id\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.key - b.key,\r\n    },\r\n    {\r\n      title: \"Ordered By\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.username - b.username,\r\n    },\r\n    {\r\n      title: \"Ordered At\",\r\n      dataIndex: \"orderedAt\",\r\n      key: \"orderedAt\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.orderedAt - b.orderedAt,\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.address - b.address,\r\n      width: \"15%\",\r\n    },\r\n    {\r\n      title: \"Phone Number\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.phoneNumber - b.phoneNumber,\r\n    },\r\n    {\r\n      title: \"Total Price($)\",\r\n      dataIndex: \"totalPrice\",\r\n      key: \"totalPrice\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.totalPrice - b.totalPrice,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.status - b.status,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: (text, record) => (\r\n        <span>\r\n          {\" \"}\r\n          {record.status === \"READY\" && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginRight: 30 }}\r\n              onClick={() => {\r\n                setOrderMode(\"Pick\");\r\n                showModal(record.id, record);\r\n              }}\r\n            >\r\n              Pick\r\n            </Button>\r\n          )}\r\n          {record.status === \"PICKED\" && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginRight: 30 }}\r\n              onClick={() => {\r\n                setOrderMode(\"Deliver\");\r\n                showModal(record.id, record);\r\n              }}\r\n            >\r\n              Deliver\r\n            </Button>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const updateAllOrders = (evt) => {\r\n    filterOrder(evt.target.value);\r\n  };\r\n\r\n  const onPickOrder = () => {\r\n    console.log(\"Order id to be picked is : \", orderId);\r\n    pickOrder(userId, orderId, order);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onDeliverOrder = () => {\r\n    console.log(\"Order id to be delivered is : \", orderId);\r\n    deliverOrder(userId, orderId, order);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  if (orderData === null || loading) {\r\n    orderContent = <Spinner />;\r\n  } else {\r\n    if (orderData && orderData.length > 0) {\r\n      orderContent = (\r\n        <div>\r\n          <Table\r\n            style={{ marginTop: \"20px\" }}\r\n            columns={columns}\r\n            expandable={{\r\n              expandedRowRender: (record) => <DetailData data={record.menus} />,\r\n              rowExpandable: (record) => record.menus !== null,\r\n            }}\r\n            dataSource={orderData}\r\n          />\r\n          <Modal\r\n            title=\"Confirm\"\r\n            visible={modalVisible}\r\n            onOk={orderMode === \"Pick\" ? onPickOrder : onDeliverOrder}\r\n            onCancel={hideModal}\r\n            okText={orderMode === \"Pick\" ? \"Picked\" : \"Delivered\"}\r\n            cancelText={\"Exit\"}\r\n          >\r\n            <p>\r\n              Are you sure,{\" \"}\r\n              {orderMode === \"Pick\"\r\n                ? `order ${orderId} is picked`\r\n                : `order ${orderId} is delivered`}\r\n              ?\r\n            </p>\r\n            {isStatusChanged && <Spin style={{ marginLeft: \"200px\" }} />}\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } else {\r\n      orderContent = <div>\r\n      <Row>\r\n        <Col span={8} offset={8}>\r\n          <Result\r\n            icon={<FrownOutlined />}\r\n            title=\"Sorry, no orders found!\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"Search orders\"\r\n        onChange={updateAllOrders}\r\n        style={{ width: 450, marginBottom: 10 }}\r\n        enterButton\r\n      />\r\n      {orderContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nAllOrders.propTypes = {\r\n  getOrders: PropTypes.func.isRequired,\r\n  pickOrder: PropTypes.func.isRequired,\r\n  deliverOrder: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  driver: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  driver: state.driver,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOrders,\r\n  pickOrder,\r\n  deliverOrder,\r\n})(withRouter(AllOrders));\r\n"]},"metadata":{},"sourceType":"module"}