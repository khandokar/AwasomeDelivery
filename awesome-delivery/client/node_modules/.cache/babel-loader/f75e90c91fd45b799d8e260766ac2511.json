{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\driver\\\\dashboard\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { ShoppingCartOutlined, UnorderedListOutlined } from \"@ant-design/icons\";\nimport { getOrders } from \"../../../actions/driverActions\";\nimport AllOrders from \"../orders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Content,\n  Sider\n} = Layout;\n\nconst Dashboard = props => {\n  _s();\n\n  const {\n    auth,\n    getOrders\n  } = props;\n  const {\n    loggedInUser\n  } = auth;\n  const {\n    loading,\n    orders,\n    orderStatusLoading\n  } = props.driver;\n  const [selectedMenuItem, setSelectedMenuItem] = useState(\"All Orders\");\n  const userId = loggedInUser.userId;\n  useEffect(() => {\n    getOrders(userId);\n  }, [getOrders, userId]);\n\n  const switchComponent = key => {\n    switch (key) {\n      case \"All Orders\":\n        return /*#__PURE__*/_jsxDEV(AllOrders, {\n          loading: loading,\n          orders: orders,\n          getOrders: getOrders,\n          orderStatusLoading: orderStatusLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Sider, {\n          width: 200,\n          className: \"site-layout-background\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            mode: \"inline\",\n            selectedKeys: selectedMenuItem,\n            onClick: e => setSelectedMenuItem(e.key),\n            defaultSelectedKeys: [\"1\"],\n            defaultOpenKeys: [\"sub-order\"],\n            style: {\n              height: \"100%\",\n              borderRight: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(SubMenu, {\n              icon: /*#__PURE__*/_jsxDEV(ShoppingCartOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, this),\n              title: \"Orders\",\n              children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n                icon: /*#__PURE__*/_jsxDEV(UnorderedListOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 51\n                }, this),\n                children: \"All Orders\"\n              }, \"All Orders\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, \"sub-order\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          style: {\n            padding: \"0 24px 24px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            style: {\n              margin: \"16px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n              children: selectedMenuItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            className: \"site-layout-background\",\n            style: {\n              padding: 24,\n              margin: 0,\n              height: \"700px\",\n              minHeight: \"auto\"\n            },\n            children: switchComponent(selectedMenuItem)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"z2zE1xWCuivK1UdZ8q/a9saTgzc=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  restaurant: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  driver: state.driver,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(withRouter(Dashboard));\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/driver/dashboard/index.js"],"names":["React","useState","useEffect","PropTypes","withRouter","connect","Layout","Menu","Breadcrumb","ShoppingCartOutlined","UnorderedListOutlined","getOrders","AllOrders","SubMenu","Content","Sider","Dashboard","props","auth","loggedInUser","loading","orders","orderStatusLoading","driver","selectedMenuItem","setSelectedMenuItem","userId","switchComponent","key","e","height","borderRight","padding","margin","minHeight","propTypes","func","isRequired","object","restaurant","mapStateToProps","state","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  UnorderedListOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n getOrders\r\n} from \"../../../actions/driverActions\";\r\nimport AllOrders from \"../orders\";\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nconst Dashboard = (props) => {\r\n  const { auth, getOrders} = props;\r\n  const { loggedInUser } = auth;\r\n  const { loading, orders, orderStatusLoading } = props.driver;\r\n  const [selectedMenuItem, setSelectedMenuItem] = useState(\"All Orders\");\r\n  const userId = loggedInUser.userId;\r\n\r\n  useEffect(() => {\r\n    getOrders(userId);\r\n  }, [getOrders, userId]);\r\n\r\n  const switchComponent = (key) => {\r\n    switch (key) {\r\n      case \"All Orders\":\r\n        return <AllOrders loading={loading} orders={orders} getOrders={getOrders} orderStatusLoading={orderStatusLoading}/>;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Layout>\r\n          <Sider width={200} className=\"site-layout-background\">\r\n            <Menu\r\n              mode=\"inline\"\r\n              selectedKeys={selectedMenuItem}\r\n              onClick={(e) => setSelectedMenuItem(e.key)}\r\n              defaultSelectedKeys={[\"1\"]}\r\n              defaultOpenKeys={[\"sub-order\"]}\r\n              style={{ height: \"100%\", borderRight: 0 }}\r\n            >\r\n              <SubMenu\r\n                key=\"sub-order\"\r\n                icon={<ShoppingCartOutlined />}\r\n                title=\"Orders\"\r\n              >\r\n                <Menu.Item key=\"All Orders\" icon={<UnorderedListOutlined />}>\r\n                  All Orders\r\n                </Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: \"0 24px 24px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item>{selectedMenuItem}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                height: \"700px\",\r\n                minHeight: \"auto\",\r\n              }}\r\n            >\r\n              {switchComponent(selectedMenuItem)}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getOrders: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  restaurant: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  driver: state.driver,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOrders,\r\n})(withRouter(Dashboard));"]},"metadata":{},"sourceType":"module"}