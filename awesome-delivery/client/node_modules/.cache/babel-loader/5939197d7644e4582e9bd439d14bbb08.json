{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\restaurant\\\\orders\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Table, Input, Modal, Button, Spin, Row, Col, Result } from \"antd\";\nimport DetailData from \"./DetailData\"; // import mockData from \"./mockData\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport Spinner from \"../../common/spinner\";\nimport { readyOrder, getOrders, acceptOrder, rejectOrder } from \"../../../actions/restaurantAction\";\nimport { FrownOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst AllOrders = props => {\n  _s();\n\n  const {\n    auth,\n    readyOrder,\n    acceptOrder,\n    rejectOrder\n  } = props;\n  const loading = props.loading;\n  const orders = props.orders;\n  const isStatusChanged = props.orderStatusLoading;\n  const [orderData, setOrderData] = useState(orders);\n  const {\n    loggedInUser\n  } = auth;\n  let restaurantId = loggedInUser.userId;\n  let orderContent;\n  const [orderMode, setOrderMode] = useState(\"\");\n  const [orderId, setOrderId] = useState(\"\");\n  const [modalVisible, setModalVisible] = useState(false);\n  useEffect(() => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      let customerName = row.customer.name;\n      return {\n        key: i + 1,\n        id: row.id,\n        orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\n        orderedBy: customerName,\n        menus: row.menus,\n        totalPrice: row.totalPrice,\n        status: row.status\n      };\n    }));\n  }, [orders]);\n\n  const showModal = id => {\n    setOrderId(id);\n    setModalVisible(true);\n  };\n\n  const hideModal = () => {\n    setOrderId(\"\");\n    setModalVisible(false);\n  };\n\n  const populateOrder = () => {\n    setOrderData(orders === null || orders === void 0 ? void 0 : orders.map((row, i) => {\n      let customerName = row.customer.name;\n      return {\n        key: i + 1,\n        orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\n        orderedBy: customerName,\n        menus: row.menus,\n        totalPrice: row.totalPrice,\n        status: row.status\n      };\n    }));\n  };\n\n  const filterOrder = key => {\n    if (key === \"\") {\n      populateOrder();\n    } else {\n      const filteredOrder = _.filter(orderData, order => order.orderedBy.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 || order.totalPrice.toString().toLowerCase().indexOf(key.toLowerCase()) > -1 || order.status.toLowerCase().indexOf(key.toLowerCase()) > -1);\n\n      setOrderData(filteredOrder);\n    }\n  };\n\n  const columns = [{\n    title: \"Order Id\",\n    dataIndex: \"key\",\n    key: \"key\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.key - b.key\n  }, {\n    title: \"Ordered By\",\n    dataIndex: \"orderedBy\",\n    key: \"orderedBy\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.orderedBy - b.orderedBy\n  }, {\n    title: \"Ordered At\",\n    dataIndex: \"orderedAt\",\n    key: \"orderedAt\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.orderedAt - b.orderedAt\n  }, {\n    title: \"Total Price ($)\",\n    dataIndex: \"totalPrice\",\n    key: \"totalPrice\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.totalPrice - b.totalPrice\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    defaultSortOrder: \"ascend\",\n    sorter: (a, b) => a.status - b.status\n  }, {\n    title: \"Action\",\n    dataIndex: \"\",\n    key: \"x\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", record.status === \"PAYED\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            marginRight: 30\n          },\n          onClick: () => {\n            setOrderMode(\"Accept\");\n            showModal(record.id);\n          },\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            color: \"red\"\n          },\n          onClick: () => {\n            setOrderMode(\"Reject\");\n            showModal(record.id);\n          },\n          danger: \"true\",\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), record.status === \"ACCEPTED\" && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginRight: 30\n        },\n        onClick: () => {\n          setOrderMode(\"Ready\");\n          showModal(record.id);\n        },\n        children: \"Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)\n  }];\n\n  const updateAllOrders = evt => {\n    filterOrder(evt.target.value);\n  };\n\n  const onRejectOrder = async () => {\n    console.log(\"Order id to be rejected is : \", orderId);\n    await rejectOrder(restaurantId, orderId);\n    setModalVisible(false);\n  };\n\n  const onAcceptOrder = async () => {\n    console.log(\"Order id to be accepted is : \", orderId);\n    await acceptOrder(restaurantId, orderId);\n    setModalVisible(false);\n  };\n\n  const onReadyOrder = async () => {\n    console.log(\"Order id to be ready is : \", orderId);\n    await readyOrder(restaurantId, orderId);\n    setModalVisible(false);\n  };\n\n  if (orderData === null || loading) {\n    orderContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 20\n    }, this);\n  } else {\n    if (orderData && orderData.length > 0) {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            marginTop: \"20px\"\n          },\n          columns: columns,\n          expandable: {\n            expandedRowRender: record => /*#__PURE__*/_jsxDEV(DetailData, {\n              data: record.menus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 46\n            }, this),\n            rowExpandable: record => record.name !== \"Not Expandable\"\n          },\n          dataSource: orderData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Confirm\",\n          visible: modalVisible,\n          onOk: orderMode === \"Ready\" ? onReadyOrder : orderMode === \"Accept\" ? onAcceptOrder : onRejectOrder,\n          onCancel: hideModal,\n          okText: orderMode === \"Ready\" ? \"Ready\" : orderMode === \"Accept\" ? \"Accept\" : \"Reject\",\n          cancelText: \"Exit\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure,\", \" \", orderMode === \"Ready\" ? `order ${orderId} is ready for pickup` : orderMode === \"Accept\" ? `you want to accept order ${orderId}` : `you want to reject order ${orderId}`, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), isStatusChanged && /*#__PURE__*/_jsxDEV(Spin, {\n            style: {\n              marginLeft: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this);\n    } else {\n      orderContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            offset: 8,\n            children: /*#__PURE__*/_jsxDEV(Result, {\n              icon: /*#__PURE__*/_jsxDEV(FrownOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this),\n              title: \"Sorry, no orders found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search orders\",\n      onChange: updateAllOrders,\n      style: {\n        width: 450,\n        marginBottom: 10\n      },\n      enterButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), orderContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllOrders, \"dcn9WmNoVc6a7t7R+rvtN/3EH9k=\");\n\n_c = AllOrders;\nAllOrders.propTypes = {\n  getOrders: PropTypes.func.isRequired,\n  readyOrder: PropTypes.func.isRequired,\n  acceptOrder: PropTypes.func.isRequired,\n  rejectOrder: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  restaurant: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  restaurant: state.restaurant,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getOrders,\n  readyOrder,\n  acceptOrder,\n  rejectOrder\n})(withRouter(AllOrders));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllOrders\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/restaurant/orders/index.js"],"names":["React","useState","useEffect","PropTypes","withRouter","connect","Table","Input","Modal","Button","Spin","Row","Col","Result","DetailData","moment","_","Spinner","readyOrder","getOrders","acceptOrder","rejectOrder","FrownOutlined","Search","AllOrders","props","auth","loading","orders","isStatusChanged","orderStatusLoading","orderData","setOrderData","loggedInUser","restaurantId","userId","orderContent","orderMode","setOrderMode","orderId","setOrderId","modalVisible","setModalVisible","map","row","i","customerName","customer","name","key","id","orderedAt","orderDate","format","orderedBy","menus","totalPrice","status","showModal","hideModal","populateOrder","filterOrder","filteredOrder","filter","order","toLowerCase","indexOf","toString","columns","title","dataIndex","defaultSortOrder","sorter","a","b","render","text","record","marginRight","color","updateAllOrders","evt","target","value","onRejectOrder","console","log","onAcceptOrder","onReadyOrder","length","marginTop","expandedRowRender","rowExpandable","marginLeft","width","marginBottom","propTypes","func","isRequired","object","restaurant","errors","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Input, Modal, Button, Spin, Row, Col, Result } from \"antd\";\r\nimport DetailData from \"./DetailData\";\r\n// import mockData from \"./mockData\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport {\r\n  readyOrder,\r\n  getOrders,\r\n  acceptOrder,\r\n  rejectOrder,\r\n} from \"../../../actions/restaurantAction\";\r\nimport { FrownOutlined } from \"@ant-design/icons\";\r\nconst { Search } = Input;\r\n\r\nconst AllOrders = (props) => {\r\n  const { auth, readyOrder, acceptOrder, rejectOrder } = props;\r\n  const loading = props.loading;\r\n  const orders = props.orders;\r\n  const isStatusChanged = props.orderStatusLoading;\r\n\r\n  const [orderData, setOrderData] = useState(orders);\r\n  const { loggedInUser } = auth;\r\n  let restaurantId = loggedInUser.userId;\r\n  let orderContent;\r\n  const [orderMode, setOrderMode] = useState(\"\");\r\n  const [orderId, setOrderId] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        let customerName = row.customer.name;\r\n        return {\r\n          key: i + 1,\r\n          id: row.id,\r\n          orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\r\n          orderedBy: customerName,\r\n          menus: row.menus,\r\n          totalPrice: row.totalPrice,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  }, [orders]);\r\n\r\n  const showModal = (id) => {\r\n    setOrderId(id);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOrderId(\"\");\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const populateOrder = () => {\r\n    setOrderData(\r\n      orders?.map((row, i) => {\r\n        let customerName = row.customer.name;\r\n        return {\r\n          key: i + 1,\r\n          orderedAt: moment(row.orderDate).format(\"MMMM DD, YYYY HH:mm\"),\r\n          orderedBy: customerName,\r\n          menus: row.menus,\r\n          totalPrice: row.totalPrice,\r\n          status: row.status,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterOrder = (key) => {\r\n    if (key === \"\") {\r\n      populateOrder();\r\n    } else {\r\n      const filteredOrder = _.filter(\r\n        orderData,\r\n        (order) =>\r\n          order.orderedBy.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.orderedAt.toLowerCase().indexOf(key.toLowerCase()) > -1 ||\r\n          order.totalPrice.toString().toLowerCase().indexOf(key.toLowerCase()) >\r\n            -1 ||\r\n          order.status.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n      );\r\n      setOrderData(filteredOrder);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Order Id\",\r\n      dataIndex: \"key\",\r\n      key: \"key\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.key - b.key,\r\n    },\r\n    {\r\n      title: \"Ordered By\",\r\n      dataIndex: \"orderedBy\",\r\n      key: \"orderedBy\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.orderedBy - b.orderedBy,\r\n    },\r\n    {\r\n      title: \"Ordered At\",\r\n      dataIndex: \"orderedAt\",\r\n      key: \"orderedAt\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.orderedAt - b.orderedAt,\r\n    },\r\n    {\r\n      title: \"Total Price ($)\",\r\n      dataIndex: \"totalPrice\",\r\n      key: \"totalPrice\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.totalPrice - b.totalPrice,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      defaultSortOrder: \"ascend\",\r\n      sorter: (a, b) => a.status - b.status,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: (text, record) => (\r\n        <span>\r\n          {\" \"}\r\n          {record.status === \"PAYED\" && (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginRight: 30 }}\r\n                onClick={() => {\r\n                  setOrderMode(\"Accept\");\r\n                  showModal(record.id);\r\n                }}\r\n              >\r\n                Accept\r\n              </Button>\r\n              <Button\r\n                style={{ color: \"red\" }}\r\n                onClick={() => {\r\n                  setOrderMode(\"Reject\");\r\n                  showModal(record.id);\r\n                }}\r\n                danger=\"true\"\r\n              >\r\n                Reject\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {record.status === \"ACCEPTED\" && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginRight: 30 }}\r\n              onClick={() => {\r\n                setOrderMode(\"Ready\");\r\n                showModal(record.id);\r\n              }}\r\n            >\r\n              Ready\r\n            </Button>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const updateAllOrders = (evt) => {\r\n    filterOrder(evt.target.value);\r\n  };\r\n\r\n  const onRejectOrder = async () => {\r\n    console.log(\"Order id to be rejected is : \", orderId);\r\n    await rejectOrder(restaurantId, orderId);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onAcceptOrder = async () => {\r\n    console.log(\"Order id to be accepted is : \", orderId);\r\n    await acceptOrder(restaurantId, orderId);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onReadyOrder = async () => {\r\n    console.log(\"Order id to be ready is : \", orderId);\r\n    await readyOrder(restaurantId, orderId);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  if (orderData === null || loading) {\r\n    orderContent = <Spinner />;\r\n  } else {\r\n    if (orderData && orderData.length > 0) {\r\n      orderContent = (\r\n        <div>\r\n          <Table\r\n            style={{ marginTop: \"20px\" }}\r\n            columns={columns}\r\n            expandable={{\r\n              expandedRowRender: (record) => <DetailData data={record.menus} />,\r\n              rowExpandable: (record) => record.name !== \"Not Expandable\",\r\n            }}\r\n            dataSource={orderData}\r\n          />\r\n          <Modal\r\n            title=\"Confirm\"\r\n            visible={modalVisible}\r\n            onOk={\r\n              orderMode === \"Ready\"\r\n                ? onReadyOrder\r\n                : orderMode === \"Accept\"\r\n                ? onAcceptOrder\r\n                : onRejectOrder\r\n            }\r\n            onCancel={hideModal}\r\n            okText={\r\n              orderMode === \"Ready\"\r\n                ? \"Ready\"\r\n                : orderMode === \"Accept\"\r\n                ? \"Accept\"\r\n                : \"Reject\"\r\n            }\r\n            cancelText={\"Exit\"}\r\n          >\r\n            <p>\r\n              Are you sure,{\" \"}\r\n              {orderMode === \"Ready\"\r\n                ? `order ${orderId} is ready for pickup`\r\n                : orderMode === \"Accept\"\r\n                ? `you want to accept order ${orderId}`\r\n                : `you want to reject order ${orderId}`}\r\n              ?\r\n            </p>\r\n            {isStatusChanged && <Spin style={{ marginLeft: \"200px\" }} />}\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } else {\r\n      orderContent = (\r\n        <div>\r\n          <Row>\r\n            <Col span={8} offset={8}>\r\n              <Result\r\n                icon={<FrownOutlined />}\r\n                title=\"Sorry, no orders found!\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"Search orders\"\r\n        onChange={updateAllOrders}\r\n        style={{ width: 450, marginBottom: 10 }}\r\n        enterButton\r\n      />\r\n      {orderContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nAllOrders.propTypes = {\r\n  getOrders: PropTypes.func.isRequired,\r\n  readyOrder: PropTypes.func.isRequired,\r\n  acceptOrder: PropTypes.func.isRequired,\r\n  rejectOrder: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  restaurant: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  restaurant: state.restaurant,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOrders,\r\n  readyOrder,\r\n  acceptOrder,\r\n  rejectOrder,\r\n})(withRouter(AllOrders));\r\n"]},"metadata":{},"sourceType":"module"}