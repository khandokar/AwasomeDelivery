{"ast":null,"code":"var _jsxFileName = \"E:\\\\E\\\\MIU\\\\SA\\\\ProjectWS\\\\FinalProject\\\\awesome-delivery\\\\client\\\\src\\\\components\\\\not-found\\\\index.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Result, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotFound = props => {\n  const {\n    auth\n  } = props;\n  let redirectLink = \"/\";\n\n  if (auth.authenticated && auth.loggedInUser && auth.loggedInUser.authorities) {\n    let userType = auth.loggedInUser && auth.loggedInUser.authorities[0].authority;\n\n    if (userType === \"ROLE_RESTAURANT\") {\n      redirectLink = \"restaurant\";\n    } else if (userType === \"ROLE_CUSTOMER\") {\n      redirectLink = \"customer\";\n    } else if (userType === \"ROLE_DRIVER\") {\n      redirectLink = \"driver\";\n    } else {\n      redirectLink = \"/\";\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Result, {\n      status: \"404\",\n      title: \"404\",\n      subTitle: \"Sorry, the page you visited does not exist.\",\n      extra: /*#__PURE__*/_jsxDEV(Link, {\n        to: redirectLink,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Back Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NotFound;\nNotFound.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(NotFound);\n\nvar _c;\n\n$RefreshReg$(_c, \"NotFound\");","map":{"version":3,"sources":["E:/E/MIU/SA/ProjectWS/FinalProject/awesome-delivery/client/src/components/not-found/index.js"],"names":["React","Link","connect","PropTypes","Result","Button","NotFound","props","auth","redirectLink","authenticated","loggedInUser","authorities","userType","authority","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,MAAIE,YAAY,GAAG,GAAnB;;AACA,MAAID,IAAI,CAACE,aAAL,IAAsBF,IAAI,CAACG,YAA3B,IAA2CH,IAAI,CAACG,YAAL,CAAkBC,WAAjE,EAA8E;AAC5E,QAAIC,QAAQ,GAAGL,IAAI,CAACG,YAAL,IAAqBH,IAAI,CAACG,YAAL,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiCE,SAArE;;AACA,QAAID,QAAQ,KAAK,iBAAjB,EAAoC;AAClCJ,MAAAA,YAAY,GAAG,YAAf;AACD,KAFD,MAEO,IAAII,QAAQ,KAAK,eAAjB,EAAkC;AACvCJ,MAAAA,YAAY,GAAG,UAAf;AACD,KAFM,MAEA,IAAII,QAAQ,KAAK,aAAjB,EAAgC;AACrCJ,MAAAA,YAAY,GAAG,QAAf;AACD,KAFM,MAEA;AACLA,MAAAA,YAAY,GAAG,GAAf;AACD;AACF;;AAED,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,MAAM,EAAC,KADT;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,QAAQ,EAAC,6CAHX;AAIE,MAAA,KAAK,eACH,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,YAAV;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9BD;;KAAMH,Q;AAgCNA,QAAQ,CAACS,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBC;AADJ,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Result, Button } from \"antd\";\r\n\r\nconst NotFound = (props) => {\r\n  const { auth } = props;\r\n  let redirectLink = \"/\";\r\n  if (auth.authenticated && auth.loggedInUser && auth.loggedInUser.authorities) {\r\n    let userType = auth.loggedInUser && auth.loggedInUser.authorities[0].authority;\r\n    if (userType === \"ROLE_RESTAURANT\") {\r\n      redirectLink = \"restaurant\";\r\n    } else if (userType === \"ROLE_CUSTOMER\") {\r\n      redirectLink = \"customer\";\r\n    } else if (userType === \"ROLE_DRIVER\") {\r\n      redirectLink = \"driver\";\r\n    } else {\r\n      redirectLink = \"/\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={\r\n          <Link to={redirectLink}>\r\n            <Button type=\"primary\">Back Home</Button>\r\n          </Link>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nNotFound.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NotFound);\r\n"]},"metadata":{},"sourceType":"module"}